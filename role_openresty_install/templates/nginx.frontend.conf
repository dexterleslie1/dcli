#user  nobody;
worker_processes auto;
worker_rlimit_nofile 65535;

# error_log  logs/error.log;
# error_log  logs/error.log  notice;
# error_log  logs/error.log  info;

# 开启debug级别日志，否则ngx.log不能输出debug级别日志
# https://stackoverflow.com/questions/55975325/nothing-is-written-to-nginx-access-log-error-log-how-to-troubleshoot
error_log logs/error.log crit;
error_log logs/error_naxsi.log warn;

#pid        logs/nginx.pid;

events {
    worker_connections  65535;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    gzip on;
    gzip_min_length 1k;
    gzip_buffers 16 64k;
    gzip_http_version 1.1;
    gzip_comp_level 6;
    gzip_types application/json text/plain application/javascript text/css application/xml;
    gzip_vary on;
    server_tokens off;
    autoindex off;
    access_log off;
    gzip_proxied any;

    # 反向代理配置
    proxy_buffering on;
    proxy_buffer_size 8k;
    proxy_buffers 32 8k;
    proxy_busy_buffers_size 16k;

    limit_conn_zone $binary_remote_addr zone=conn_zone:128m;
    limit_conn conn_zone 10;
    client_max_body_size 120k;
    client_body_buffer_size 10k;
    client_header_buffer_size 1k;
    large_client_header_buffers 2 8k;
    client_header_timeout 5s;
    client_body_timeout 5s;

    lua_shared_dict my_limit_req_store 256m;
    lua_shared_dict dict_log_tail 16m;
    # lua_package_path "/usr/local/openresty/nginx/conf/lua/?.lua;;;";
    lua_package_path "/usr/local/openresty/nginx/conf/lua/?.lua;/usr/local/openresty/lualib/?.lua;;;";
    lua_package_cpath "/usr/local/openresty/lualib/?.so;;";
    proxy_cache_path /tmp/proxy_cache levels=1:2 keys_zone=cache_one:200m inactive=1d max_size=2g use_temp_path=off;

    access_by_lua_block {
        ngx.req.clear_header("x-forwarded-for");
        ngx.req.set_header("x-forwarded-for", ngx.var.remote_addr);

    	-- 获取客户端真实ip地址
        local common = require("my_common");
        local clientIp = ngx.var.remote_addr;
        local requestUrl = common.getRequestUrl();
        local dictMyLimitReq = ngx.shared.my_limit_req_store;

        -- 下面开关，0、不允许访问，1、允许访问
        -- 全球开关
        local switchGlobal          =0
        -- 中国大陆所有省份开关
        local switchChinaMainland   =1
        -- 香港开关
        local switchHongkong        =1
        -- 台湾开关
        local switchTaiwan          =0
        -- 北京开关
        local switchBeijing         =1
        -- 福建开关
        local switchFujian          =1
        -- 江西开关
        local switchJiangxi         =1
        -- 湖南开关
        local switchHunan           =1
        -- 浙江开关
        local switchZhejiang        =1
        -- 重庆开关
        local switchChongqing       =1
        common.intercept(clientIp, switchGlobal, switchChinaMainland, switchHongkong, switchTaiwan, switchBeijing, switchFujian, switchJiangxi, switchHunan, switchZhejiang, switchChongqing)
    }

    include default.conf;
}
